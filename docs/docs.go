// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-08-15 17:43:38.9423046 +0800 CST m=+0.062541901

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/flowerwedding/myChat",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "summary": "模板"
            }
        },
        "/user_list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "获取用户列表",
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/logic.User"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "发送消息",
                "parameters": [
                    {
                        "description": "nickname",
                        "name": "nickname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "token",
                        "name": "token",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/logic.Message"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "logic.Message": {
            "type": "object",
            "properties": {
                "client_send_time": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "msg_time": {
                    "type": "string"
                },
                "mts": {
                    "description": "@人",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to": {
                    "description": "私信",
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/logic.User"
                }
            }
        },
        "logic.User": {
            "type": "object",
            "properties": {
                "addr": {
                    "type": "string"
                },
                "conn": {
                    "type": "string"
                },
                "enter_at": {
                    "type": "string"
                },
                "isNew": {
                    "type": "boolean"
                },
                "nickname": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "聊天室",
	Description: "《Go语言编程之旅》项目练习",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
